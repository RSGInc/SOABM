"knitr", "mapview", "plotly", "RColorBrewer", "rgdal", "rgeos",
"rmarkdown", "scales", "stringr", "jsonlite", "pander", "ggplot2")
#install_package <- function(pkg){
#  if (!pkg %in% installed.packages()) install.packages(pkg, repos='http://cran.us.r-project.org')
#}
#
#lapply(SYSTEM_REPORT_PKGS, install_package)
#
### Install all required R packages to the user specified directory [Make sure the R library directory has write permissions for the user]
#if (!"DT" %in% installed.packages()) install.packages("DT", repos='http://cran.us.r-project.org')
#if (!"leaflet" %in% installed.packages()) install.packages("leaflet", repos='http://cran.us.r-project.org')
#if (!"geojsonio" %in% installed.packages()) install.packages("geojsonio", repos='http://cran.us.r-project.org')
#if (!"htmltools" %in% installed.packages()) install.packages("htmltools", repos='http://cran.us.r-project.org')
#if (!"htmlwidgets" %in% installed.packages()) install.packages("htmlwidgets", repos='http://cran.us.r-project.org')
#if (!"knitr" %in% installed.packages()) install.packages("knitr", repos='http://cran.us.r-project.org')
#if (!"mapview" %in% installed.packages()) install.packages("mapview", repos='http://cran.us.r-project.org')
#if (!"plotly" %in% installed.packages()) install.packages("plotly", repos='http://cran.us.r-project.org')
#if (!"RColorBrewer" %in% installed.packages()) install.packages("RColorBrewer", repos='http://cran.us.r-project.org')
#if (!"rgdal" %in% installed.packages()) install.packages("rgdal", repos='http://cran.us.r-project.org')
#if (!"rgeos" %in% installed.packages()) install.packages("rgeos", repos='http://cran.us.r-project.org')
#if (!"rmarkdown" %in% installed.packages()) install.packages("rmarkdown", repos='http://cran.us.r-project.org')
#if (!"scales" %in% installed.packages()) install.packages("scales", repos='http://cran.us.r-project.org')
#if (!"stringr" %in% installed.packages()) install.packages("stringr", repos='http://cran.us.r-project.org')
#if (!"jsonlite" %in% installed.packages()) install.packages("jsonlite", repos='http://cran.us.r-project.org')
#if (!"pander" %in% installed.packages()) install.packages("pander", repos='http://cran.us.r-project.org')
#if (!"ggplot2" %in% installed.packages()) install.packages("ggplot2", repos='http://cran.us.r-project.org')
##devtools::install_github("rstudio/flexdashboard")
lapply(SYSTEM_REPORT_PKGS, require, character.only = TRUE)
### Read Target and Output SUmmary files
currDir <- getwd()
setwd(BASE_DATA_PATH)
base_csv = list.files(pattern="*.csv")
base_data <- lapply(base_csv, read.csv)
base_csv_names <- unlist(lapply(base_csv, function (x) {gsub(".csv", "", x)}))
setwd(BUILD_DATA_PATH)
build_csv = list.files(pattern="*.csv")
build_data <- lapply(build_csv, read.csv)
build_csv_names <- unlist(lapply(base_csv, function (x) {gsub(".csv", "", x)}))
setwd(currDir)
### Generate dashboard
rmarkdown::render(file.path(SYSTEM_TEMPLATES_PATH, "SOABMDashboard.Rmd"),
output_dir = OUTPUT_PATH,
intermediates_dir = OUTPUT_PATH, quiet = TRUE)
SOABMDashboard.html <- readLines(file.path(OUTPUT_PATH, "SOABMDashboard.html"))
idx <- which(SOABMDashboard.html == "window.FlexDashboardComponents = [];")[1]
SOABMDashboard.html <- append(SOABMDashboard.html, "L_PREFER_CANVAS = true;", after = idx)
writeLines(SOABMDashboard.html, file.path(OUTPUT_PATH, "SOABMDashboard.html"))
# finish
##################################################################################
# Master script to render final HTML file from R Markdown file
# Loads all required packages
#
##################################################################################
### Initialization
# Load global variables
workingDir <- "C:/Users/binny.paul.I-RSG/Documents/Projects/ODOT_SOABM/CalibrationTask/SOABM_Visualizer"
source(paste(workingDir, "scripts/_SYSTEM_VARIABLES.R", sep = "/"))
SYSTEM_REPORT_PKGS <- c("DT", "flexdashboard", "leaflet", "geojsonio", "htmltools", "htmlwidgets",
"knitr", "mapview", "plotly", "RColorBrewer", "rgdal", "rgeos",
"rmarkdown", "scales", "stringr", "jsonlite", "pander", "ggplot2")
#install_package <- function(pkg){
#  if (!pkg %in% installed.packages()) install.packages(pkg, repos='http://cran.us.r-project.org')
#}
#
#lapply(SYSTEM_REPORT_PKGS, install_package)
#
### Install all required R packages to the user specified directory [Make sure the R library directory has write permissions for the user]
#if (!"DT" %in% installed.packages()) install.packages("DT", repos='http://cran.us.r-project.org')
#if (!"leaflet" %in% installed.packages()) install.packages("leaflet", repos='http://cran.us.r-project.org')
#if (!"geojsonio" %in% installed.packages()) install.packages("geojsonio", repos='http://cran.us.r-project.org')
#if (!"htmltools" %in% installed.packages()) install.packages("htmltools", repos='http://cran.us.r-project.org')
#if (!"htmlwidgets" %in% installed.packages()) install.packages("htmlwidgets", repos='http://cran.us.r-project.org')
#if (!"knitr" %in% installed.packages()) install.packages("knitr", repos='http://cran.us.r-project.org')
#if (!"mapview" %in% installed.packages()) install.packages("mapview", repos='http://cran.us.r-project.org')
#if (!"plotly" %in% installed.packages()) install.packages("plotly", repos='http://cran.us.r-project.org')
#if (!"RColorBrewer" %in% installed.packages()) install.packages("RColorBrewer", repos='http://cran.us.r-project.org')
#if (!"rgdal" %in% installed.packages()) install.packages("rgdal", repos='http://cran.us.r-project.org')
#if (!"rgeos" %in% installed.packages()) install.packages("rgeos", repos='http://cran.us.r-project.org')
#if (!"rmarkdown" %in% installed.packages()) install.packages("rmarkdown", repos='http://cran.us.r-project.org')
#if (!"scales" %in% installed.packages()) install.packages("scales", repos='http://cran.us.r-project.org')
#if (!"stringr" %in% installed.packages()) install.packages("stringr", repos='http://cran.us.r-project.org')
#if (!"jsonlite" %in% installed.packages()) install.packages("jsonlite", repos='http://cran.us.r-project.org')
#if (!"pander" %in% installed.packages()) install.packages("pander", repos='http://cran.us.r-project.org')
#if (!"ggplot2" %in% installed.packages()) install.packages("ggplot2", repos='http://cran.us.r-project.org')
##devtools::install_github("rstudio/flexdashboard")
lapply(SYSTEM_REPORT_PKGS, require, character.only = TRUE)
### Read Target and Output SUmmary files
currDir <- getwd()
setwd(BASE_DATA_PATH)
base_csv = list.files(pattern="*.csv")
base_data <- lapply(base_csv, read.csv)
base_csv_names <- unlist(lapply(base_csv, function (x) {gsub(".csv", "", x)}))
setwd(BUILD_DATA_PATH)
build_csv = list.files(pattern="*.csv")
build_data <- lapply(build_csv, read.csv)
build_csv_names <- unlist(lapply(base_csv, function (x) {gsub(".csv", "", x)}))
setwd(currDir)
### Generate dashboard
rmarkdown::render(file.path(SYSTEM_TEMPLATES_PATH, "SOABMDashboard.Rmd"),
output_dir = OUTPUT_PATH,
intermediates_dir = OUTPUT_PATH, quiet = TRUE)
SOABMDashboard.html <- readLines(file.path(OUTPUT_PATH, "SOABMDashboard.html"))
idx <- which(SOABMDashboard.html == "window.FlexDashboardComponents = [];")[1]
SOABMDashboard.html <- append(SOABMDashboard.html, "L_PREFER_CANVAS = true;", after = idx)
writeLines(SOABMDashboard.html, file.path(OUTPUT_PATH, "SOABMDashboard.html"))
# finish
##################################################################################
# Master script to render final HTML file from R Markdown file
# Loads all required packages
#
##################################################################################
### Initialization
# Load global variables
workingDir <- "C:/Users/binny.paul.I-RSG/Documents/Projects/ODOT_SOABM/CalibrationTask/SOABM_Visualizer"
source(paste(workingDir, "scripts/_SYSTEM_VARIABLES.R", sep = "/"))
SYSTEM_REPORT_PKGS <- c("DT", "flexdashboard", "leaflet", "geojsonio", "htmltools", "htmlwidgets",
"knitr", "mapview", "plotly", "RColorBrewer", "rgdal", "rgeos",
"rmarkdown", "scales", "stringr", "jsonlite", "pander", "ggplot2")
#install_package <- function(pkg){
#  if (!pkg %in% installed.packages()) install.packages(pkg, repos='http://cran.us.r-project.org')
#}
#
#lapply(SYSTEM_REPORT_PKGS, install_package)
#
### Install all required R packages to the user specified directory [Make sure the R library directory has write permissions for the user]
#if (!"DT" %in% installed.packages()) install.packages("DT", repos='http://cran.us.r-project.org')
#if (!"leaflet" %in% installed.packages()) install.packages("leaflet", repos='http://cran.us.r-project.org')
#if (!"geojsonio" %in% installed.packages()) install.packages("geojsonio", repos='http://cran.us.r-project.org')
#if (!"htmltools" %in% installed.packages()) install.packages("htmltools", repos='http://cran.us.r-project.org')
#if (!"htmlwidgets" %in% installed.packages()) install.packages("htmlwidgets", repos='http://cran.us.r-project.org')
#if (!"knitr" %in% installed.packages()) install.packages("knitr", repos='http://cran.us.r-project.org')
#if (!"mapview" %in% installed.packages()) install.packages("mapview", repos='http://cran.us.r-project.org')
#if (!"plotly" %in% installed.packages()) install.packages("plotly", repos='http://cran.us.r-project.org')
#if (!"RColorBrewer" %in% installed.packages()) install.packages("RColorBrewer", repos='http://cran.us.r-project.org')
#if (!"rgdal" %in% installed.packages()) install.packages("rgdal", repos='http://cran.us.r-project.org')
#if (!"rgeos" %in% installed.packages()) install.packages("rgeos", repos='http://cran.us.r-project.org')
#if (!"rmarkdown" %in% installed.packages()) install.packages("rmarkdown", repos='http://cran.us.r-project.org')
#if (!"scales" %in% installed.packages()) install.packages("scales", repos='http://cran.us.r-project.org')
#if (!"stringr" %in% installed.packages()) install.packages("stringr", repos='http://cran.us.r-project.org')
#if (!"jsonlite" %in% installed.packages()) install.packages("jsonlite", repos='http://cran.us.r-project.org')
#if (!"pander" %in% installed.packages()) install.packages("pander", repos='http://cran.us.r-project.org')
#if (!"ggplot2" %in% installed.packages()) install.packages("ggplot2", repos='http://cran.us.r-project.org')
##devtools::install_github("rstudio/flexdashboard")
lapply(SYSTEM_REPORT_PKGS, require, character.only = TRUE)
### Read Target and Output SUmmary files
currDir <- getwd()
setwd(BASE_DATA_PATH)
base_csv = list.files(pattern="*.csv")
base_data <- lapply(base_csv, read.csv)
base_csv_names <- unlist(lapply(base_csv, function (x) {gsub(".csv", "", x)}))
setwd(BUILD_DATA_PATH)
build_csv = list.files(pattern="*.csv")
build_data <- lapply(build_csv, read.csv)
build_csv_names <- unlist(lapply(base_csv, function (x) {gsub(".csv", "", x)}))
setwd(currDir)
### Generate dashboard
rmarkdown::render(file.path(SYSTEM_TEMPLATES_PATH, "SOABMDashboard.Rmd"),
output_dir = OUTPUT_PATH,
intermediates_dir = OUTPUT_PATH, quiet = TRUE)
SOABMDashboard.html <- readLines(file.path(OUTPUT_PATH, "SOABMDashboard.html"))
idx <- which(SOABMDashboard.html == "window.FlexDashboardComponents = [];")[1]
SOABMDashboard.html <- append(SOABMDashboard.html, "L_PREFER_CANVAS = true;", after = idx)
writeLines(SOABMDashboard.html, file.path(OUTPUT_PATH, "SOABMDashboard.html"))
# finish
?"plotly_build"
##################################################################################
# Master script to render final HTML file from R Markdown file
# Loads all required packages
#
##################################################################################
### Initialization
# Load global variables
workingDir <- "C:/Users/binny.paul.I-RSG/Documents/Projects/ODOT_SOABM/CalibrationTask/SOABM_Visualizer"
source(paste(workingDir, "scripts/_SYSTEM_VARIABLES.R", sep = "/"))
SYSTEM_REPORT_PKGS <- c("DT", "flexdashboard", "leaflet", "geojsonio", "htmltools", "htmlwidgets",
"knitr", "mapview", "plotly", "RColorBrewer", "rgdal", "rgeos",
"rmarkdown", "scales", "stringr", "jsonlite", "pander", "ggplot2")
#install_package <- function(pkg){
#  if (!pkg %in% installed.packages()) install.packages(pkg, repos='http://cran.us.r-project.org')
#}
#
#lapply(SYSTEM_REPORT_PKGS, install_package)
#
### Install all required R packages to the user specified directory [Make sure the R library directory has write permissions for the user]
#if (!"DT" %in% installed.packages()) install.packages("DT", repos='http://cran.us.r-project.org')
#if (!"leaflet" %in% installed.packages()) install.packages("leaflet", repos='http://cran.us.r-project.org')
#if (!"geojsonio" %in% installed.packages()) install.packages("geojsonio", repos='http://cran.us.r-project.org')
#if (!"htmltools" %in% installed.packages()) install.packages("htmltools", repos='http://cran.us.r-project.org')
#if (!"htmlwidgets" %in% installed.packages()) install.packages("htmlwidgets", repos='http://cran.us.r-project.org')
#if (!"knitr" %in% installed.packages()) install.packages("knitr", repos='http://cran.us.r-project.org')
#if (!"mapview" %in% installed.packages()) install.packages("mapview", repos='http://cran.us.r-project.org')
#if (!"plotly" %in% installed.packages()) install.packages("plotly", repos='http://cran.us.r-project.org')
#if (!"RColorBrewer" %in% installed.packages()) install.packages("RColorBrewer", repos='http://cran.us.r-project.org')
#if (!"rgdal" %in% installed.packages()) install.packages("rgdal", repos='http://cran.us.r-project.org')
#if (!"rgeos" %in% installed.packages()) install.packages("rgeos", repos='http://cran.us.r-project.org')
#if (!"rmarkdown" %in% installed.packages()) install.packages("rmarkdown", repos='http://cran.us.r-project.org')
#if (!"scales" %in% installed.packages()) install.packages("scales", repos='http://cran.us.r-project.org')
#if (!"stringr" %in% installed.packages()) install.packages("stringr", repos='http://cran.us.r-project.org')
#if (!"jsonlite" %in% installed.packages()) install.packages("jsonlite", repos='http://cran.us.r-project.org')
#if (!"pander" %in% installed.packages()) install.packages("pander", repos='http://cran.us.r-project.org')
#if (!"ggplot2" %in% installed.packages()) install.packages("ggplot2", repos='http://cran.us.r-project.org')
##devtools::install_github("rstudio/flexdashboard")
lapply(SYSTEM_REPORT_PKGS, require, character.only = TRUE)
### Read Target and Output SUmmary files
currDir <- getwd()
setwd(BASE_DATA_PATH)
base_csv = list.files(pattern="*.csv")
base_data <- lapply(base_csv, read.csv)
base_csv_names <- unlist(lapply(base_csv, function (x) {gsub(".csv", "", x)}))
setwd(BUILD_DATA_PATH)
build_csv = list.files(pattern="*.csv")
build_data <- lapply(build_csv, read.csv)
build_csv_names <- unlist(lapply(base_csv, function (x) {gsub(".csv", "", x)}))
setwd(currDir)
### Generate dashboard
rmarkdown::render(file.path(SYSTEM_TEMPLATES_PATH, "SOABMDashboard.Rmd"),
output_dir = OUTPUT_PATH,
intermediates_dir = OUTPUT_PATH, quiet = TRUE)
SOABMDashboard.html <- readLines(file.path(OUTPUT_PATH, "SOABMDashboard.html"))
idx <- which(SOABMDashboard.html == "window.FlexDashboardComponents = [];")[1]
SOABMDashboard.html <- append(SOABMDashboard.html, "L_PREFER_CANVAS = true;", after = idx)
writeLines(SOABMDashboard.html, file.path(OUTPUT_PATH, "SOABMDashboard.html"))
# finish
##################################################################################
# Master script to render final HTML file from R Markdown file
# Loads all required packages
#
##################################################################################
### Initialization
# Load global variables
workingDir <- "C:/Users/binny.paul.I-RSG/Documents/Projects/ODOT_SOABM/CalibrationTask/SOABM_Visualizer"
source(paste(workingDir, "scripts/_SYSTEM_VARIABLES.R", sep = "/"))
SYSTEM_REPORT_PKGS <- c("DT", "flexdashboard", "leaflet", "geojsonio", "htmltools", "htmlwidgets",
"knitr", "mapview", "plotly", "RColorBrewer", "rgdal", "rgeos",
"rmarkdown", "scales", "stringr", "jsonlite", "pander", "ggplot2")
#install_package <- function(pkg){
#  if (!pkg %in% installed.packages()) install.packages(pkg, repos='http://cran.us.r-project.org')
#}
#
#lapply(SYSTEM_REPORT_PKGS, install_package)
#
### Install all required R packages to the user specified directory [Make sure the R library directory has write permissions for the user]
#if (!"DT" %in% installed.packages()) install.packages("DT", repos='http://cran.us.r-project.org')
#if (!"leaflet" %in% installed.packages()) install.packages("leaflet", repos='http://cran.us.r-project.org')
#if (!"geojsonio" %in% installed.packages()) install.packages("geojsonio", repos='http://cran.us.r-project.org')
#if (!"htmltools" %in% installed.packages()) install.packages("htmltools", repos='http://cran.us.r-project.org')
#if (!"htmlwidgets" %in% installed.packages()) install.packages("htmlwidgets", repos='http://cran.us.r-project.org')
#if (!"knitr" %in% installed.packages()) install.packages("knitr", repos='http://cran.us.r-project.org')
#if (!"mapview" %in% installed.packages()) install.packages("mapview", repos='http://cran.us.r-project.org')
#if (!"plotly" %in% installed.packages()) install.packages("plotly", repos='http://cran.us.r-project.org')
#if (!"RColorBrewer" %in% installed.packages()) install.packages("RColorBrewer", repos='http://cran.us.r-project.org')
#if (!"rgdal" %in% installed.packages()) install.packages("rgdal", repos='http://cran.us.r-project.org')
#if (!"rgeos" %in% installed.packages()) install.packages("rgeos", repos='http://cran.us.r-project.org')
#if (!"rmarkdown" %in% installed.packages()) install.packages("rmarkdown", repos='http://cran.us.r-project.org')
#if (!"scales" %in% installed.packages()) install.packages("scales", repos='http://cran.us.r-project.org')
#if (!"stringr" %in% installed.packages()) install.packages("stringr", repos='http://cran.us.r-project.org')
#if (!"jsonlite" %in% installed.packages()) install.packages("jsonlite", repos='http://cran.us.r-project.org')
#if (!"pander" %in% installed.packages()) install.packages("pander", repos='http://cran.us.r-project.org')
#if (!"ggplot2" %in% installed.packages()) install.packages("ggplot2", repos='http://cran.us.r-project.org')
##devtools::install_github("rstudio/flexdashboard")
lapply(SYSTEM_REPORT_PKGS, require, character.only = TRUE)
### Read Target and Output SUmmary files
currDir <- getwd()
setwd(BASE_DATA_PATH)
base_csv = list.files(pattern="*.csv")
base_data <- lapply(base_csv, read.csv)
base_csv_names <- unlist(lapply(base_csv, function (x) {gsub(".csv", "", x)}))
setwd(BUILD_DATA_PATH)
build_csv = list.files(pattern="*.csv")
build_data <- lapply(build_csv, read.csv)
build_csv_names <- unlist(lapply(base_csv, function (x) {gsub(".csv", "", x)}))
setwd(currDir)
### Generate dashboard
rmarkdown::render(file.path(SYSTEM_TEMPLATES_PATH, "SOABMDashboard.Rmd"),
output_dir = OUTPUT_PATH,
intermediates_dir = OUTPUT_PATH, quiet = TRUE)
SOABMDashboard.html <- readLines(file.path(OUTPUT_PATH, "SOABMDashboard.html"))
idx <- which(SOABMDashboard.html == "window.FlexDashboardComponents = [];")[1]
SOABMDashboard.html <- append(SOABMDashboard.html, "L_PREFER_CANVAS = true;", after = idx)
writeLines(SOABMDashboard.html, file.path(OUTPUT_PATH, "SOABMDashboard.html"))
# finish
##################################################################################
# Master script to render final HTML file from R Markdown file
# Loads all required packages
#
##################################################################################
### Initialization
# Load global variables
workingDir <- "C:/Users/binny.paul.I-RSG/Documents/Projects/ODOT_SOABM/CalibrationTask/SOABM_Visualizer"
source(paste(workingDir, "scripts/_SYSTEM_VARIABLES.R", sep = "/"))
SYSTEM_REPORT_PKGS <- c("DT", "flexdashboard", "leaflet", "geojsonio", "htmltools", "htmlwidgets",
"knitr", "mapview", "plotly", "RColorBrewer", "rgdal", "rgeos",
"rmarkdown", "scales", "stringr", "jsonlite", "pander", "ggplot2")
#install_package <- function(pkg){
#  if (!pkg %in% installed.packages()) install.packages(pkg, repos='http://cran.us.r-project.org')
#}
#
#lapply(SYSTEM_REPORT_PKGS, install_package)
#
### Install all required R packages to the user specified directory [Make sure the R library directory has write permissions for the user]
#if (!"DT" %in% installed.packages()) install.packages("DT", repos='http://cran.us.r-project.org')
#if (!"leaflet" %in% installed.packages()) install.packages("leaflet", repos='http://cran.us.r-project.org')
#if (!"geojsonio" %in% installed.packages()) install.packages("geojsonio", repos='http://cran.us.r-project.org')
#if (!"htmltools" %in% installed.packages()) install.packages("htmltools", repos='http://cran.us.r-project.org')
#if (!"htmlwidgets" %in% installed.packages()) install.packages("htmlwidgets", repos='http://cran.us.r-project.org')
#if (!"knitr" %in% installed.packages()) install.packages("knitr", repos='http://cran.us.r-project.org')
#if (!"mapview" %in% installed.packages()) install.packages("mapview", repos='http://cran.us.r-project.org')
#if (!"plotly" %in% installed.packages()) install.packages("plotly", repos='http://cran.us.r-project.org')
#if (!"RColorBrewer" %in% installed.packages()) install.packages("RColorBrewer", repos='http://cran.us.r-project.org')
#if (!"rgdal" %in% installed.packages()) install.packages("rgdal", repos='http://cran.us.r-project.org')
#if (!"rgeos" %in% installed.packages()) install.packages("rgeos", repos='http://cran.us.r-project.org')
#if (!"rmarkdown" %in% installed.packages()) install.packages("rmarkdown", repos='http://cran.us.r-project.org')
#if (!"scales" %in% installed.packages()) install.packages("scales", repos='http://cran.us.r-project.org')
#if (!"stringr" %in% installed.packages()) install.packages("stringr", repos='http://cran.us.r-project.org')
#if (!"jsonlite" %in% installed.packages()) install.packages("jsonlite", repos='http://cran.us.r-project.org')
#if (!"pander" %in% installed.packages()) install.packages("pander", repos='http://cran.us.r-project.org')
#if (!"ggplot2" %in% installed.packages()) install.packages("ggplot2", repos='http://cran.us.r-project.org')
##devtools::install_github("rstudio/flexdashboard")
lapply(SYSTEM_REPORT_PKGS, require, character.only = TRUE)
### Read Target and Output SUmmary files
currDir <- getwd()
setwd(BASE_DATA_PATH)
base_csv = list.files(pattern="*.csv")
base_data <- lapply(base_csv, read.csv)
base_csv_names <- unlist(lapply(base_csv, function (x) {gsub(".csv", "", x)}))
setwd(BUILD_DATA_PATH)
build_csv = list.files(pattern="*.csv")
build_data <- lapply(build_csv, read.csv)
build_csv_names <- unlist(lapply(base_csv, function (x) {gsub(".csv", "", x)}))
setwd(currDir)
### Generate dashboard
rmarkdown::render(file.path(SYSTEM_TEMPLATES_PATH, "SOABMDashboard.Rmd"),
output_dir = OUTPUT_PATH,
intermediates_dir = OUTPUT_PATH, quiet = TRUE)
SOABMDashboard.html <- readLines(file.path(OUTPUT_PATH, "SOABMDashboard.html"))
idx <- which(SOABMDashboard.html == "window.FlexDashboardComponents = [];")[1]
SOABMDashboard.html <- append(SOABMDashboard.html, "L_PREFER_CANVAS = true;", after = idx)
writeLines(SOABMDashboard.html, file.path(OUTPUT_PATH, "SOABMDashboard.html"))
# finish
##################################################################################
# Master script to render final HTML file from R Markdown file
# Loads all required packages
#
##################################################################################
### Initialization
# Load global variables
workingDir <- "C:/Users/binny.paul.I-RSG/Documents/Projects/ODOT_SOABM/CalibrationTask/SOABM_Visualizer"
source(paste(workingDir, "scripts/_SYSTEM_VARIABLES.R", sep = "/"))
SYSTEM_REPORT_PKGS <- c("DT", "flexdashboard", "leaflet", "geojsonio", "htmltools", "htmlwidgets",
"knitr", "mapview", "plotly", "RColorBrewer", "rgdal", "rgeos",
"rmarkdown", "scales", "stringr", "jsonlite", "pander", "ggplot2")
#install_package <- function(pkg){
#  if (!pkg %in% installed.packages()) install.packages(pkg, repos='http://cran.us.r-project.org')
#}
#
#lapply(SYSTEM_REPORT_PKGS, install_package)
#
### Install all required R packages to the user specified directory [Make sure the R library directory has write permissions for the user]
#if (!"DT" %in% installed.packages()) install.packages("DT", repos='http://cran.us.r-project.org')
#if (!"leaflet" %in% installed.packages()) install.packages("leaflet", repos='http://cran.us.r-project.org')
#if (!"geojsonio" %in% installed.packages()) install.packages("geojsonio", repos='http://cran.us.r-project.org')
#if (!"htmltools" %in% installed.packages()) install.packages("htmltools", repos='http://cran.us.r-project.org')
#if (!"htmlwidgets" %in% installed.packages()) install.packages("htmlwidgets", repos='http://cran.us.r-project.org')
#if (!"knitr" %in% installed.packages()) install.packages("knitr", repos='http://cran.us.r-project.org')
#if (!"mapview" %in% installed.packages()) install.packages("mapview", repos='http://cran.us.r-project.org')
#if (!"plotly" %in% installed.packages()) install.packages("plotly", repos='http://cran.us.r-project.org')
#if (!"RColorBrewer" %in% installed.packages()) install.packages("RColorBrewer", repos='http://cran.us.r-project.org')
#if (!"rgdal" %in% installed.packages()) install.packages("rgdal", repos='http://cran.us.r-project.org')
#if (!"rgeos" %in% installed.packages()) install.packages("rgeos", repos='http://cran.us.r-project.org')
#if (!"rmarkdown" %in% installed.packages()) install.packages("rmarkdown", repos='http://cran.us.r-project.org')
#if (!"scales" %in% installed.packages()) install.packages("scales", repos='http://cran.us.r-project.org')
#if (!"stringr" %in% installed.packages()) install.packages("stringr", repos='http://cran.us.r-project.org')
#if (!"jsonlite" %in% installed.packages()) install.packages("jsonlite", repos='http://cran.us.r-project.org')
#if (!"pander" %in% installed.packages()) install.packages("pander", repos='http://cran.us.r-project.org')
#if (!"ggplot2" %in% installed.packages()) install.packages("ggplot2", repos='http://cran.us.r-project.org')
##devtools::install_github("rstudio/flexdashboard")
lapply(SYSTEM_REPORT_PKGS, require, character.only = TRUE)
### Read Target and Output SUmmary files
currDir <- getwd()
setwd(BASE_DATA_PATH)
base_csv = list.files(pattern="*.csv")
base_data <- lapply(base_csv, read.csv)
base_csv_names <- unlist(lapply(base_csv, function (x) {gsub(".csv", "", x)}))
setwd(BUILD_DATA_PATH)
build_csv = list.files(pattern="*.csv")
build_data <- lapply(build_csv, read.csv)
build_csv_names <- unlist(lapply(base_csv, function (x) {gsub(".csv", "", x)}))
setwd(currDir)
### Generate dashboard
rmarkdown::render(file.path(SYSTEM_TEMPLATES_PATH, "SOABMDashboard.Rmd"),
output_dir = OUTPUT_PATH,
intermediates_dir = OUTPUT_PATH, quiet = TRUE)
SOABMDashboard.html <- readLines(file.path(OUTPUT_PATH, "SOABMDashboard.html"))
idx <- which(SOABMDashboard.html == "window.FlexDashboardComponents = [];")[1]
SOABMDashboard.html <- append(SOABMDashboard.html, "L_PREFER_CANVAS = true;", after = idx)
writeLines(SOABMDashboard.html, file.path(OUTPUT_PATH, "SOABMDashboard.html"))
# finish
### Generate dashboard
rmarkdown::render(file.path(SYSTEM_TEMPLATES_PATH, "SOABMDashboard.Rmd"),
output_dir = OUTPUT_PATH,
intermediates_dir = OUTPUT_PATH, quiet = TRUE)
SOABMDashboard.html <- readLines(file.path(OUTPUT_PATH, "SOABMDashboard.html"))
idx <- which(SOABMDashboard.html == "window.FlexDashboardComponents = [];")[1]
SOABMDashboard.html <- append(SOABMDashboard.html, "L_PREFER_CANVAS = true;", after = idx)
writeLines(SOABMDashboard.html, file.path(OUTPUT_PATH, "SOABMDashboard.html"))
### Generate dashboard
rmarkdown::render(file.path(SYSTEM_TEMPLATES_PATH, "SOABMDashboard.Rmd"),
output_dir = OUTPUT_PATH,
intermediates_dir = OUTPUT_PATH, quiet = TRUE)
SOABMDashboard.html <- readLines(file.path(OUTPUT_PATH, "SOABMDashboard.html"))
idx <- which(SOABMDashboard.html == "window.FlexDashboardComponents = [];")[1]
SOABMDashboard.html <- append(SOABMDashboard.html, "L_PREFER_CANVAS = true;", after = idx)
writeLines(SOABMDashboard.html, file.path(OUTPUT_PATH, "SOABMDashboard.html"))
### Generate dashboard
rmarkdown::render(file.path(SYSTEM_TEMPLATES_PATH, "SOABMDashboard.Rmd"),
output_dir = OUTPUT_PATH,
intermediates_dir = OUTPUT_PATH, quiet = TRUE)
SOABMDashboard.html <- readLines(file.path(OUTPUT_PATH, "SOABMDashboard.html"))
idx <- which(SOABMDashboard.html == "window.FlexDashboardComponents = [];")[1]
SOABMDashboard.html <- append(SOABMDashboard.html, "L_PREFER_CANVAS = true;", after = idx)
writeLines(SOABMDashboard.html, file.path(OUTPUT_PATH, "SOABMDashboard.html"))
### Generate dashboard
rmarkdown::render(file.path(SYSTEM_TEMPLATES_PATH, "SOABMDashboard.Rmd"),
output_dir = OUTPUT_PATH,
intermediates_dir = OUTPUT_PATH, quiet = TRUE)
SOABMDashboard.html <- readLines(file.path(OUTPUT_PATH, "SOABMDashboard.html"))
idx <- which(SOABMDashboard.html == "window.FlexDashboardComponents = [];")[1]
SOABMDashboard.html <- append(SOABMDashboard.html, "L_PREFER_CANVAS = true;", after = idx)
writeLines(SOABMDashboard.html, file.path(OUTPUT_PATH, "SOABMDashboard.html"))
### Generate dashboard
rmarkdown::render(file.path(SYSTEM_TEMPLATES_PATH, "SOABMDashboard.Rmd"),
output_dir = OUTPUT_PATH,
intermediates_dir = OUTPUT_PATH, quiet = TRUE)
SOABMDashboard.html <- readLines(file.path(OUTPUT_PATH, "SOABMDashboard.html"))
idx <- which(SOABMDashboard.html == "window.FlexDashboardComponents = [];")[1]
SOABMDashboard.html <- append(SOABMDashboard.html, "L_PREFER_CANVAS = true;", after = idx)
writeLines(SOABMDashboard.html, file.path(OUTPUT_PATH, "SOABMDashboard.html"))
?par
par
par()
par$mar
par.mar
par(mar)
### Generate dashboard
rmarkdown::render(file.path(SYSTEM_TEMPLATES_PATH, "SOABMDashboard.Rmd"),
output_dir = OUTPUT_PATH,
intermediates_dir = OUTPUT_PATH, quiet = TRUE)
SOABMDashboard.html <- readLines(file.path(OUTPUT_PATH, "SOABMDashboard.html"))
idx <- which(SOABMDashboard.html == "window.FlexDashboardComponents = [];")[1]
SOABMDashboard.html <- append(SOABMDashboard.html, "L_PREFER_CANVAS = true;", after = idx)
writeLines(SOABMDashboard.html, file.path(OUTPUT_PATH, "SOABMDashboard.html"))
str(p)
### Generate dashboard
rmarkdown::render(file.path(SYSTEM_TEMPLATES_PATH, "SOABMDashboard.Rmd"),
output_dir = OUTPUT_PATH,
intermediates_dir = OUTPUT_PATH, quiet = TRUE)
SOABMDashboard.html <- readLines(file.path(OUTPUT_PATH, "SOABMDashboard.html"))
idx <- which(SOABMDashboard.html == "window.FlexDashboardComponents = [];")[1]
SOABMDashboard.html <- append(SOABMDashboard.html, "L_PREFER_CANVAS = true;", after = idx)
writeLines(SOABMDashboard.html, file.path(OUTPUT_PATH, "SOABMDashboard.html"))
str(p1)
### Generate dashboard
rmarkdown::render(file.path(SYSTEM_TEMPLATES_PATH, "SOABMDashboard.Rmd"),
output_dir = OUTPUT_PATH,
intermediates_dir = OUTPUT_PATH, quiet = TRUE)
SOABMDashboard.html <- readLines(file.path(OUTPUT_PATH, "SOABMDashboard.html"))
idx <- which(SOABMDashboard.html == "window.FlexDashboardComponents = [];")[1]
SOABMDashboard.html <- append(SOABMDashboard.html, "L_PREFER_CANVAS = true;", after = idx)
writeLines(SOABMDashboard.html, file.path(OUTPUT_PATH, "SOABMDashboard.html"))
### Generate dashboard
rmarkdown::render(file.path(SYSTEM_TEMPLATES_PATH, "SOABMDashboard.Rmd"),
output_dir = OUTPUT_PATH,
intermediates_dir = OUTPUT_PATH, quiet = TRUE)
SOABMDashboard.html <- readLines(file.path(OUTPUT_PATH, "SOABMDashboard.html"))
idx <- which(SOABMDashboard.html == "window.FlexDashboardComponents = [];")[1]
SOABMDashboard.html <- append(SOABMDashboard.html, "L_PREFER_CANVAS = true;", after = idx)
writeLines(SOABMDashboard.html, file.path(OUTPUT_PATH, "SOABMDashboard.html"))
### Generate dashboard
rmarkdown::render(file.path(SYSTEM_TEMPLATES_PATH, "SOABMDashboard.Rmd"),
output_dir = OUTPUT_PATH,
intermediates_dir = OUTPUT_PATH, quiet = TRUE)
SOABMDashboard.html <- readLines(file.path(OUTPUT_PATH, "SOABMDashboard.html"))
idx <- which(SOABMDashboard.html == "window.FlexDashboardComponents = [];")[1]
SOABMDashboard.html <- append(SOABMDashboard.html, "L_PREFER_CANVAS = true;", after = idx)
writeLines(SOABMDashboard.html, file.path(OUTPUT_PATH, "SOABMDashboard.html"))
### Generate dashboard
rmarkdown::render(file.path(SYSTEM_TEMPLATES_PATH, "SOABMDashboard.Rmd"),
output_dir = OUTPUT_PATH,
intermediates_dir = OUTPUT_PATH, quiet = TRUE)
SOABMDashboard.html <- readLines(file.path(OUTPUT_PATH, "SOABMDashboard.html"))
idx <- which(SOABMDashboard.html == "window.FlexDashboardComponents = [];")[1]
SOABMDashboard.html <- append(SOABMDashboard.html, "L_PREFER_CANVAS = true;", after = idx)
writeLines(SOABMDashboard.html, file.path(OUTPUT_PATH, "SOABMDashboard.html"))
### Generate dashboard
rmarkdown::render(file.path(SYSTEM_TEMPLATES_PATH, "SOABMDashboard.Rmd"),
output_dir = OUTPUT_PATH,
intermediates_dir = OUTPUT_PATH, quiet = TRUE)
SOABMDashboard.html <- readLines(file.path(OUTPUT_PATH, "SOABMDashboard.html"))
idx <- which(SOABMDashboard.html == "window.FlexDashboardComponents = [];")[1]
SOABMDashboard.html <- append(SOABMDashboard.html, "L_PREFER_CANVAS = true;", after = idx)
writeLines(SOABMDashboard.html, file.path(OUTPUT_PATH, "SOABMDashboard.html"))
### Generate dashboard
rmarkdown::render(file.path(SYSTEM_TEMPLATES_PATH, "SOABMDashboard.Rmd"),
output_dir = OUTPUT_PATH,
intermediates_dir = OUTPUT_PATH, quiet = TRUE)
SOABMDashboard.html <- readLines(file.path(OUTPUT_PATH, "SOABMDashboard.html"))
idx <- which(SOABMDashboard.html == "window.FlexDashboardComponents = [];")[1]
SOABMDashboard.html <- append(SOABMDashboard.html, "L_PREFER_CANVAS = true;", after = idx)
writeLines(SOABMDashboard.html, file.path(OUTPUT_PATH, "SOABMDashboard.html"))
sessionInfo()
devtools::install_github("ropensci/plotly")
devtools::install_github("ropensci/plotly")
